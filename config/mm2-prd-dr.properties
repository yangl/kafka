clusters=k001,k002

k001.bootstrap.servers=100.81.129.68:9092,100.81.129.69:9092,100.81.129.70:9092,100.81.129.71:9092,100.81.129.72:9092
k001.zookeeper.connect=100.81.129.68:2181,100.81.129.69:2181,100.81.129.70:2181,100.81.129.71:2181,100.81.129.72:2181/kafka/cloud_pri_kafka_njmd1pqa01
#k001.security.protocol=SASL_PLAINTEXT
#k001.sasl.mechanism=SCRAM-SHA-256
#k001.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="admin-secret";

k002.bootstrap.servers=100.81.129.73:9092,100.81.129.74:9092,100.81.129.75:9092,100.81.129.76:9092,100.81.129.77:9092
k002.zookeeper.connect=100.81.129.73:2181,100.81.129.74:2181,100.81.129.75:2181,100.81.129.76:2181,100.81.129.77:2181/kafka/cloud_pri_kafka_5qzpxx0o01
#k002.security.protocol=SASL_PLAINTEXT
#k002.sasl.mechanism=SCRAM-SHA-256
#k002.sasl.jaas.config=org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="admin-secret";

k001->k002.enabled=true
k001->k002.topics=YANGLIN
k001->k002.topics.exclude=KAFKA_BROKER_CHECK_NEW, .*[\-\.]internal, .*\.replica, __.*
k001->k002.groups=.*
k001->k002.groups.exclude=mwopr_consumer, console-consumer-.*, connect-.*, __.*


# \u540C\u6B65\u6D88\u8D39\u7EC4
group.id=sync2023

refresh.topics.enabled=true
refresh.topics.interval.seconds=10
refresh.groups.enabled=true
refresh.groups.interval.seconds=10

sync.topic.configs.enabled=false
sync.topic.acls.enabled=true

sync.group.offsets.enabled=true
sync.group.offsets.interval.seconds=10

emit.heartbeats.enabled=true
emit.heartbeats.interval.seconds=5

tasks.max=5

# \u5FAA\u73AF\u540C\u6B65\u6D88\u606F\u5934\u68C0\u6D4B
provenance.header.enable=true

replication.factor=3
replication.policy.class=org.apache.kafka.connect.mirror.IdentityReplicationPolicy


# earliest latest
k001.consumer.auto.offset.reset=latest
k001.consumer.isolation.level=read_committed
k001.consumer.partition.assignment.strategy=org.apache.kafka.clients.consumer.CooperativeStickyAssignor


k002.producer.compression.type=snappy
k002.producer.enable.idempotence=true
k002.producer.max.in.flight.requests.per.connection=5
k002.producer.retries=10

offset.flush.interval.ms=20000

# \u4E0A\u4E0B\u6E38\u96C6\u7FA4\u4F4D\u70B9\u5DEE\u5F02\u4FDD\u5B58
#offset.mapping.save.server.url=http://10.202.98.80:8082/tlb/v2/offset/saveOffset
# \u4E0A\u4E0B\u6E38\u96C6\u7FA4\u4F4D\u70B9\u5DEE\u5F02\u8D85\u8FC7\u591A\u5C11\u4FDD\u5B58\u9608\u503C\uFF0C\u9ED8\u8BA4100
offset.lag.max=100
